 // Find conversation ID using the conversations.list method
async function findConversation(name) {
  try {
    // Call the conversations.list method using the built-in WebClient
    const result = await app.client.conversations.list({
      // The token you used to initialize your app
      token: process.env.SLACK_BOT_TOKEN
    });

    for (const channel of result.channels) {
      if (channel.name === name) {
        conversationId = channel.id;

        // Print result
        console.log("Found conversation ID: " + conversationId);
        // Break from for loop
        break;
      }
    }
  }
  catch (error) {
    console.error(error);
  }
}

// Find conversation with a specified channel `name`
findConversation("general");

  //Fetch conversation history using the ID and a TS from the last example
  async function fetchMessage(id, ts) {
    try {
      // Call the conversations.history method using the built-in WebClient
      const result = await app.client.conversations.history({
        // The token you used to initialize your app
        token: process.env.SLACK_BOT_TOKEN,
        channel: id,
        // In a more realistic app, you may store ts data in a db
        latest: ts,
        // Limit results
        inclusive: true,
        limit: 1
      });
  
      // There should only be one result (stored in the zeroth index)
      message = result.messages[0];
      // Print message text
      console.log(message.text);
    }
    catch (error) {
      console.error(error);
    }
  }
  
  // Fetch message using a channel ID and message TS
  fetchMessage(conversationId, "15712345.001500");

// app.message(message, async ({ message, say }) => {
//     let predictions = await model.classify(text);
//     predictions.forEach(prediction => {
// 			if(prediction.results[0].match){
// 				// channel.messages.cache.delete(message.id);
// 				var pred = prediction.label
// 				say(`Deleted message as ${pred.charAt(0).toUpperCase()+pred.slice(1)} was detected in the message! Please adhere to community guidelines`);
// 				//delete message
//   				// .then(msg => console.log(`Deleted message from ${msg.author.username}`))
//   				// .catch(console.error);
				
// 				//msg.reply("Warning!" + pred + " detected!");
// 				//console.log(prediction.label)
// 			}
// 		}); 
//     // await say(`_Who's there?_`);
//     console.log("here");
//   });
